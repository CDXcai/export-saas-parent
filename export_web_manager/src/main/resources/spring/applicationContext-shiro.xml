<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <description>Shiro与Spring整合</description>

   <!-- <bean id="redisManager" class="org.crazycake.shiro.RedisManager">
        <property name="host" value="127.0.0.1:6379"></property>
    </bean>

    <bean id="cacheManager" class="org.crazycake.shiro.RedisCacheManager">
        <property name="redisManager" ref="redisManager"></property>
    </bean>-->

    <!--<bean id="cacheManager" class="org.apache.shiro.cache.MemoryConstrainedCacheManager"></bean>-->

    <!--<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManagerConfigFile" value="classpath:cache/ehcache-shiro.xml"></property>
    </bean>

    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="authRealm"/>引用自定义的realm
    <property name="cacheManager" ref="cacheManager"></property>
</bean>
-->


    <!--内置缓存-->
    <!--<bean id="cacheManager" class="org.apache.shiro.cache.MemoryConstrainedCacheManager"></bean>-->

    <!--redis配置-->
    <!--<bean id="redisManager" class="org.crazycake.shiro.RedisManager">
        <property name="host" value="127.0.0.1:6379"></property>
    </bean>

    &lt;!&ndash;配置缓存管理器&ndash;&gt;
    <bean id="cacheManager" class="org.crazycake.shiro.RedisCacheManager">
        <property name="redisManager" ref="redisManager"></property>
    </bean>-->


    <!--配置安全管理器-->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <!--引用自定义的realm -->
        <property name="realm" ref="authRealm"/>
        <!--配置缓存-->
        <!--<property name="cacheManager" ref="cacheManager"></property>-->
    </bean>


    <!-- 自定义Realm域的编写 : 需要特殊实现realm接口 -->
    <bean id="authRealm" class="com.itheima.web.controller.shiro.AuthRealm">
        <!-- 注入自定义的密码比较器: 原生的密码加密 不好 自定义密码加密和比较器 -->
        <property name="credentialsMatcher" ref="customerCredentialsMatcher" ></property>
    </bean>

    <!-- 自定义的密码比较器 -->
    <bean id="customerCredentialsMatcher" class="com.itheima.web.controller.shiro.CustomCredentialsMatcher"></bean>

    <!--将类注入到容器-->
    <bean id="myPermissionsFilter" class="com.itheima.web.controller.filter.MyPermissionsFilter"></bean>

    <!-- filter-name这个名字的值来自于web.xml中filter的名字  核心配置 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">



        <property name="securityManager" ref="securityManager"/>
        <!--登录页面  -->
        <property name="loginUrl" value="/login.jsp"></property>
        <!-- 权限不足的时候跳转页面 -->
        <property name="unauthorizedUrl" value="/unauthorized.jsp"></property>


        <!--加入自己的过滤器-->
        <property name="filters">
            <map>
                <!--key表示唯一 , 以后使用自定义filter的key-->
                <entry key="myPerm" value-ref="myPermissionsFilter"></entry>
            </map>
        </property>

        <property name="filterChainDefinitions">
            <!-- /**代表下面的多级目录也过滤  perms 必须具备某些权限才可以访问 -->
            <value>
<!--                /system/module/list.do = perms["模块管理"]-->
               <!-- /system/module/list.do = perms["模块管理"]-->
                <!--perms["模块管理","新增模块"] 用户有没有模块管理 管理权限 和 新增模块 并且 同时满足才可以访问-->
                <!--如果希望有特殊要求 : 自定义过滤器  管理权限 或者 新增模块 -->
                /system/module/list.do = myPerm["模块管理","新增模块"]
                /index.jsp* = anon
                /login.jsp* = anon
                /login.jsp* = anon
                /weixin/*=anon
                /weixinlogin=anon
                /weixinlogin/*=anon
                /login* = anon
                /logout* = anon
                /css/** = anon
                /img/** = anon
                /plugins/** = anon
                /make/** = anon
                /** = authc
                /*.* = authc
            </value>
        </property>
    </bean>

    <!--固定代码-->
    <!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

    <!-- 生成代理，通过代理进行控制 -->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
          depends-on="lifecycleBeanPostProcessor">
        <property name="proxyTargetClass" value="true"/>
    </bean>

    <!-- 安全管理器 -->
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

    <aop:aspectj-autoproxy proxy-target-class="true"/>

</beans>